---
title: "Mapping with leaflet"
author: "MA615"
date: "2024 Nov 8"
format: html
editor: visual
---

# Mapping with leaflet {.smaller}

[Making interactive maps with leaflet](https://r-charts.com/spatial/interactive-maps-leaflet/)

Reference: [Nico Hahn, *Making Maps with R*](https://bookdown.org/nicohahn/making_maps_with_r5/docs/introduction.html)

Find the data for examples in this repo: [github.com/nicoFhahn/making_maps_with_r](https://github.com/nicoFhahn/making_maps_with_r)

## leaflet

**leaflet** is an open-source JavaScript library that is used to create dynamic online maps. The identically named R package makes it possible to create these kinds of maps in R as well. First the function `leaflet()` is called, followed by different layers with `add*()`. Again, the pipe operator is used to add layers on top of each other.

```{r}
#| label: load packages
#| warning: false
#| message: false

# for loading our data
library(readr)
library(sf)
# for plotting
library(leaflet)
library(leaflet.extras)
# for more stuff
library(dbscan)
library(dplyr)
library(openrouteservice)
library(geosphere)
library(magrittr)
```

```{r}
#| label: leaflet basic map

leaflet() %>%
  addTiles() %>%
  setView(lng = -3.7, lat = 40.4, zoom = 5)
```

```{r}
#| label: leaflet add some markers


leaflet() %>%
  addTiles() %>%
  setView(lng = -3.7, lat = 40.4, zoom = 5) %>%
  addMarkers(data = data.frame(lng = c(-3.7, -8, -4.2), lat = c(40.4, 43.1, 41.4)))


```

```{r}
#| label: leaflet polygon overlays - geojson

# Read a Geojson or shapefile
data_map <- read_sf("https://raw.githubusercontent.com/R-CoderDotCom/data/main/sample_geojson.geojson")

# Transform to leaflet projection if needed
data_map <- st_transform(data_map, crs = '+proj=longlat +datum=WGS84')

leaflet() %>%
  addTiles() %>%
  setView(lng = -0.49, lat = 38.34, zoom = 14) %>%
  addPolygons(data = data_map, color = "blue", stroke = 1, opacity = 0.8) 




```

```{r}
#|label: circles and popups

library(leaflet)

circles <- data.frame(lng = c(-73.58, -73.46), lat = c(45.5, 45.55))

leaflet() %>%
  addTiles() %>%
  setView(lng = -73.53, lat = 45.5, zoom = 12) %>%
  addCircles(data = circles, radius = 2000,
             popup = paste0("Title", "<hr>", "Text 1", "<br>", "Text 2")) %>%
  addCircleMarkers(data = circles,
                   popup = c("A", "B")) 
 





```

## Data used

All data used in this chapter is again taken from OpenStreetMap, and most of the data has been converted to shapefiles.

## Data used

All data used in this chapter is again taken from OpenStreetMap, and most of the data has been converted to shapefiles.

```{r, eval=FALSE}

path1 <- "making_maps_with_r-master/datasets/chapter_6/"

pharmacies <- read_sf(paste0(path1,"pharmacies.shp"))
streets <- read_sf(paste0(path1,"streets.shp"))
```

## legend

```{r}
#| label: leaflet legend
#| warning: false
#| message: false



circles <- data.frame(lng = c(-3.7, -8, -4.2),
                      lat = c(40.4, 43.1, 41.4),
                      values = c(10, 20, 30))

# Continuous palette
# pal <- colorNumeric(palette = "viridis", domain = circles$values)

# Discrete palette
pal <- colorFactor("viridis", levels = circles$values)

leaflet() %>%
  addTiles() %>%
  setView(lng = -3.7, lat = 40.4, zoom = 5) %>%
  addCircleMarkers(data = circles, color = ~pal(values)) %>%
  addLegend(data = circles,
            position = "bottomright",
            pal = pal, values = ~values,
            title = "Legend",
            opacity = 1) 
 
 
 
 




```

## Using leaflet to create maps

we will record all pharmacies within a 20-minute travel time window by bicycle from a specific starting point in Munich. First we create our basemap with `leaflet()` and add different provider tiles and a layers control so that users can switch between the different basemaps.

```{r, eval=FALSE}

path1 <- "making_maps_with_r-master/datasets/chapter_6/"

pharmacies <- read_sf(paste0(path1,"pharmacies.shp"))
streets <- read_sf(paste0(path1,"streets.shp"))
```

```{r}
basemap <- leaflet() %>%
  # add different provider tiles
  addProviderTiles(
    "OpenStreetMap",
    # give the layer a name
    group = "OpenStreetMap"
  ) %>%
  addProviderTiles(
    "Stamen.Toner",
    group = "Stamen.Toner"
  ) %>%
  addProviderTiles(
    "Stamen.Terrain",
    group = "Stamen.Terrain"
  ) %>%
  addProviderTiles(
    "Esri.WorldStreetMap",
    group = "Esri.WorldStreetMap"
  ) %>%
  addProviderTiles(
    "Wikimedia",
    group = "Wikimedia"
  ) %>%
  addProviderTiles(
    "CartoDB.Positron",
    group = "CartoDB.Positron"
  ) %>%
  addProviderTiles(
    "Esri.WorldImagery",
    group = "Esri.WorldImagery"
  ) %>%
# add a layers control
  addLayersControl(
    baseGroups = c(
      "OpenStreetMap", "Stamen.Toner",
      "Stamen.Terrain", "Esri.WorldStreetMap",
      "Wikimedia", "CartoDB.Positron", "Esri.WorldImagery"
    ),
    # position it on the topleft
    position = "topleft"
  )
```

Next we add a marker for our starting point. To make it stand out from the markers we will add later, we create a unique looking marker with `makeAwesomeIcon()` and add it to our basemap with `addAwesomeMarkers()`. Notice how we can add layers to our `basemap` object using `%>%`.

```{r, eval=FALSE}
icon.fa <- makeAwesomeIcon(
  icon = "flag", markerColor = "red",
  library = "fa",
  iconColor = "black"
)

map_1 <- basemap %>%
  addAwesomeMarkers(
    lat = 48.1,
    lng = 11.5,
    label = "Starting point",
    icon = icon.fa
  )

map_1
```

```{r}
#| label: leaflet map1
#| fig-align: center
#| fig-cap: A simple leaflet map with different layers and one marker
#| echo: false
#| 

htmltools::tags$iframe(src = "making_maps_with_r-master/html_plots/chapter_6/leaflet_1.html")

```
